Pom.xml: 

<project xmlns="http://maven.apache.org/POM/4.0.0" \ 

xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 

xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 

http://maven.apache.org/maven-v4_0_0.xsd"> 

<modelVersion>4.0.0</modelVersion> 

<groupId>com.javatpoint</groupId> 

<artifactId>SpringMVC</artifactId> 

<packaging>war</packaging> 

<version>0.0.1-SNAPSHOT</version> 

<name>SpringMVC Maven Webapp</name> 

<url>http://maven.apache.org</url>	 

<dependencies> 

<dependency> 

<groupId>junit</groupId> 

<artifactId>junit</artifactId> 

<version>3.8.1</version> 

<scope>test</scope> 

</dependency> 

 

<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> 

<dependency> 

<groupId>org.springframework</groupId> 

<artifactId>spring-webmvc</artifactId> 

<version>5.1.1.RELEASE</version> 

</dependency> 

 

<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --> 

<dependency> 

<groupId>javax.servlet</groupId> 

<artifactId>servlet-api</artifactId> 

<version>3.0-alpha-1</version> 

</dependency> 

</dependencies> 

<build> 

<finalName>SpringMVC</finalName> 

</build> 

</project> 

Step 2: Create the Controller Class 

HelloEdunet.java 

@Controller 

public class HelloEdunet { 

@RequestMapping("/") 

public String display() 

{ 

return "hello"; 

} 

} 

Step 3: Provide the name of the controller in the web.xml file 

<?xml version="1.0" encoding="UTF-8"?> 

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 

xmlns="http://java.sun.com/xml/ns/javaee" 

xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 

http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0"> 

<display-name>SpringMVC</display-name> 

<servlet> 

<servlet-name>spring</servlet-name> 

<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> 

<load-on-startup>1</load-on-startup> 

</servlet> 

<servlet-mapping> 

<servlet-name>spring</servlet-name> 

<url-pattern>/</url-pattern> 

</servlet-mapping> 

</web-app> 

 

 

Step 4: WEB-INF directory 

spring-servlet.xml 

<?xml version="1.0" encoding="UTF-8"?> 

<beans xmlns="http://www.springframework.org/schema/beans" 

xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:context="http://www.springframework.org/schema/context" 

xmlns:mvc="http://www.springframework.org/schema/mvc" 

xsi:schemaLocation=" 

http://www.springframework.org/schema/beans 

http://www.springframework.org/schema/beans/spring-beans.xsd 

http://www.springframework.org/schema/context 

http://www.springframework.org/schema/context/spring-context.xsd 

http://www.springframework.org/schema/mvc 

http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 

<!-- This element defines the base-package where 

DispatcherServlet will search the controller class. --> 

<context:component-scan base-package="com.geek" /> 

<!--Provide support for conversion, 

formatting and also for validation --> 

<mvc:annotation-driven/> 

</beans> 

 

 

 

 

Step 5: Use JSP to display the message 

index.jsp 

<html> 

<body> 

<p>Spring MVC l!!</p> 

</body> 

</html> 

OUTPUT: 
